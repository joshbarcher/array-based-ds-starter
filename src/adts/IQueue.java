package adts;

/**
 * Represents a FIFO queue. The size of the queue should
 * increase to support any number of elements.
 *
 * DO NOT EDIT THIS FILE!
 *
 * @author Josh Archer
 * @version 1.0
 */
public interface IQueue extends ICollection
{
    /**
     * Returns the number of spots currently in the queue, occupied or not.
     *
     * @return the capacity of the queue
     */
    int getCurrentCapacity();

    /**
     * Returns true if the capacity matches the size of the queue.
     *
     * @return true if size and capacity are the same, otherwise false
     */
    boolean isFull();

    /**
     * This method should not include an implementation.
     *
     * @param element the input element to remove
     * @throws UnsupportedOperationException when called
     */
    void remove(Object element);

    /**
     * Removes the front element in the queue.
     *
     * @return the front element in the queue
     * @throws java.util.NoSuchElementException if the queue
     * is empty
     */
    Object remove();
}
